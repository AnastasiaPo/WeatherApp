{"ast":null,"code":"var _jsxFileName = \"/Users/a.ponkrashenkova/Documents/GitHub/WeatherApp/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport DadataSuggestions from 'react-dadata-suggestions';\nimport \"react-dadata-suggestions/dist/styles.css\";\nconst dadataToken = '9357f46cef73bd355912567b08e7ecd06f531745'; // const PLACES = [\n//   { name: \"Москва\", zip: \"105005\" },\n//   { name: \"Санкт-Петербург\", zip: \"187015\" },\n//   { name: \"Сочи\", zip: \"354000\" },\n//   { name: \"Пятигорск\", zip: \"357361\" }\n// ]\n\nclass WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n\n  componentDidMount() {\n    const geoname = this.props.cityId;\n    const URL = \"api.openweathermap.org/data/2.5/weather?id=\" + geoname + \"&appid=2fe9657dc864de269a18a030c1815838\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({\n        weatherData: json\n      });\n    });\n    console.log('вот тут должен быть объект с подсказками ' + geoname);\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.props.updateData(this.state.name);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 35\n      }\n    }, \"\\u0417\\u0430\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C \\u0431\\u0443\\u043C\\u0435\\u0440\\u0430\\u043D\\u0433\"));\n    const weather = weatherData.weather;\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, weather.main, \" in \", weatherData.name, /*#__PURE__*/React.createElement(\"img\", {\n      src: iconUrl,\n      alt: weatherData.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Current: \", weatherData.main.temp, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"High: \", weatherData.main.temp_max, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Low: \", weatherData.main.temp_min, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Wind Speed: \", weatherData.wind.speed, \" mi/hr\"));\n  }\n\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      suggestion: []\n    };\n\n    this.Data = () => {\n      this.setState({\n        suggestion: []\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DadataSuggestions, {\n      className: \"dadata-body\",\n      token: dadataToken,\n      onSelect: suggestion => console.log(suggestion.data.geoname_id),\n      Data: this.Data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WeatherDisplay, {\n      cityId: this.state.suggestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a.ponkrashenkova/Documents/GitHub/WeatherApp/src/App.js"],"names":["React","Component","DadataSuggestions","dadataToken","WeatherDisplay","constructor","state","weatherData","componentDidMount","geoname","props","cityId","URL","fetch","then","res","json","setState","console","log","render","updateData","name","weather","iconUrl","icon","main","description","temp","temp_max","temp_min","wind","speed","App","suggestion","Data","data","geoname_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport DadataSuggestions from 'react-dadata-suggestions';\nimport \"react-dadata-suggestions/dist/styles.css\";\n\nconst dadataToken = '9357f46cef73bd355912567b08e7ecd06f531745';\n\n// const PLACES = [\n//   { name: \"Москва\", zip: \"105005\" },\n//   { name: \"Санкт-Петербург\", zip: \"187015\" },\n//   { name: \"Сочи\", zip: \"354000\" },\n//   { name: \"Пятигорск\", zip: \"357361\" }\n// ]\n\nclass WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n  componentDidMount() {\n    const geoname = this.props.cityId;\n    const URL = \"api.openweathermap.org/data/2.5/weather?id=\" + geoname + \"&appid=2fe9657dc864de269a18a030c1815838\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({ weatherData: json });\n    });\n    console.log('вот тут должен быть объект с подсказками ' + geoname)\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n\n    if (!weatherData) return <div><button onClick={() => { this.props.updateData(this.state.name)}}>Запустить бумеранг</button></div>;\n    const weather = weatherData.weather;\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n\n    return (\n      <div>\n        <h1>\n          {weather.main} in {weatherData.name}\n          <img src={iconUrl} alt={weatherData.description} />\n        </h1>\n        <p>Current: {weatherData.main.temp}°</p>\n        <p>High: {weatherData.main.temp_max}°</p>\n        <p>Low: {weatherData.main.temp_min}°</p>\n        <p>Wind Speed: {weatherData.wind.speed} mi/hr</p>\n      </div>\n    );\n  }\n}\n\n\nclass App extends Component {\n\n //  constructor() {\n //   super();\n //   this.state = {\n //     activePlace: 0,\n //   };\n // }\n\n state = {\n    suggestion: []\n  };\n\nData = () => {\n   this.setState({ suggestion: [] })\n}\n\n  render() {\n    return (\n      <div className=\"weather-body\">\n        <DadataSuggestions\n          className=\"dadata-body\"\n          token={ dadataToken }\n          onSelect={ (suggestion) => console.log(suggestion.data.geoname_id) }\n          Data={this.Data}\n        />\n        <div></div>\n        <WeatherDisplay\n          cityId={this.state.suggestion}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}