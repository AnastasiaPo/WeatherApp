{"ast":null,"code":"var _jsxFileName = \"/Users/a.ponkrashenkova/Documents/GitHub/WeatherApp/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport DadataSuggestions from 'react-dadata-suggestions';\nimport \"react-dadata-suggestions/dist/styles.css\";\nconst dadataToken = '9357f46cef73bd355912567b08e7ecd06f531745';\nconst PLACES = [{\n  name: \"Москва\",\n  zip: \"105005\"\n}, {\n  name: \"Санкт-Петербург\",\n  zip: \"187015\"\n}, {\n  name: \"Сочи\",\n  zip: \"354000\"\n}, {\n  name: \"Пятигорск\",\n  zip: \"357361\"\n}]; //const PLACES = suggestion;\n\nclass WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n\n  componentDidMount() {\n    const city_id = this.props.zip;\n    const URL = \"api.openweathermap.org/data/2.5/weather?id=\" + city_id + \"&appid=2fe9657dc864de269a18a030c1815838\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({\n        weatherData: json\n      });\n    });\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 30\n      }\n    }, \"Loading...\");\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, weather.main, \" in \", weatherData.name, /*#__PURE__*/React.createElement(\"img\", {\n      src: iconUrl,\n      alt: weatherData.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Current: \", weatherData.main.temp, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"High: \", weatherData.main.temp_max, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Low: \", weatherData.main.temp_min, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"Wind Speed: \", weatherData.wind.speed, \" mi/hr\"));\n  }\n\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activePlace: 0\n    };\n  }\n\n  render() {\n    const activePlace = this.state.activePlace;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, PLACES.map((place, index) => /*#__PURE__*/React.createElement(\"button\", {\n      className: \"city-btn\",\n      key: index,\n      onClick: () => {\n        this.setState({\n          activePlace: index\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, place.name)), /*#__PURE__*/React.createElement(DadataSuggestions, {\n      className: \"dadata-body\",\n      token: dadataToken,\n      onSelect: suggestion => console.log(suggestion),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WeatherDisplay, {\n      key: activePlace,\n      zip: PLACES[activePlace].zip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a.ponkrashenkova/Documents/GitHub/WeatherApp/src/App.js"],"names":["React","Component","DadataSuggestions","dadataToken","PLACES","name","zip","WeatherDisplay","constructor","state","weatherData","componentDidMount","city_id","props","URL","fetch","then","res","json","setState","render","weather","iconUrl","icon","main","description","temp","temp_max","temp_min","wind","speed","App","activePlace","map","place","index","suggestion","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,OAAO,0CAAP;AAEA,MAAMC,WAAW,GAAG,0CAApB;AAEA,MAAMC,MAAM,GAAG,CACb;AAAEC,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,GAAG,EAAE;AAAvB,CADa,EAEb;AAAED,EAAAA,IAAI,EAAE,iBAAR;AAA2BC,EAAAA,GAAG,EAAE;AAAhC,CAFa,EAGb;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,GAAG,EAAE;AAArB,CAHa,EAIb;AAAED,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,GAAG,EAAE;AAA1B,CAJa,CAAf,C,CAOA;;AAEA,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AACrCO,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWP,GAA3B;AACA,UAAMQ,GAAG,GAAG,gDAAgDF,OAAhD,GAA0D,yCAAtE;AACAG,IAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvB,EAAmCF,IAAnC,CAAwCE,IAAI,IAAI;AAC9C,WAAKC,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAEQ;AAAf,OAAd;AACD,KAFD;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAMV,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AAEA,QAAI,CAACA,WAAL,EAAkB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAClB,UAAMW,OAAO,GAAGX,WAAW,CAACW,OAAZ,CAAoB,CAApB,CAAhB;AACA,UAAMC,OAAO,GAAG,qCAAqCD,OAAO,CAACE,IAA7C,GAAoD,MAApE;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,OAAO,CAACG,IADX,UACqBd,WAAW,CAACL,IADjC,eAEE;AAAK,MAAA,GAAG,EAAEiB,OAAV;AAAmB,MAAA,GAAG,EAAEZ,WAAW,CAACe,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaf,WAAW,CAACc,IAAZ,CAAiBE,IAA9B,SALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUhB,WAAW,CAACc,IAAZ,CAAiBG,QAA3B,SANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAASjB,WAAW,CAACc,IAAZ,CAAiBI,QAA1B,SAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgBlB,WAAW,CAACmB,IAAZ,CAAiBC,KAAjC,WARF,CADF;AAYD;;AAlCoC;;AAqCvC,MAAMC,GAAN,SAAkB9B,SAAlB,CAA4B;AAE1BO,EAAAA,WAAW,GAAG;AACb;AACA,SAAKC,KAAL,GAAa;AACXuB,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAEAZ,EAAAA,MAAM,GAAG;AACP,UAAMY,WAAW,GAAG,KAAKvB,KAAL,CAAWuB,WAA/B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG5B,MAAM,CAAC6B,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,GAAG,EAAEA,KAFP;AAGE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKhB,QAAL,CAAc;AAAEa,UAAAA,WAAW,EAAEG;AAAf,SAAd;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGD,KAAK,CAAC7B,IAPT,CADD,CADH,eAYE,oBAAC,iBAAD;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,KAAK,EAAGF,WAFV;AAGE,MAAA,QAAQ,EAAIiC,UAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,UAAZ,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,eAiBE,oBAAC,cAAD;AACE,MAAA,GAAG,EAAEJ,WADP;AAEE,MAAA,GAAG,EAAE5B,MAAM,CAAC4B,WAAD,CAAN,CAAoB1B,GAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,CADF;AAwBD;;AApCyB;;AAuC5B,eAAeyB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport DadataSuggestions from 'react-dadata-suggestions';\nimport \"react-dadata-suggestions/dist/styles.css\";\n\nconst dadataToken = '9357f46cef73bd355912567b08e7ecd06f531745';\n\nconst PLACES = [\n  { name: \"Москва\", zip: \"105005\" },\n  { name: \"Санкт-Петербург\", zip: \"187015\" },\n  { name: \"Сочи\", zip: \"354000\" },\n  { name: \"Пятигорск\", zip: \"357361\" }\n]\n\n//const PLACES = suggestion;\n\nclass WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n  componentDidMount() {\n    const city_id = this.props.zip;\n    const URL = \"api.openweathermap.org/data/2.5/weather?id=\" + city_id + \"&appid=2fe9657dc864de269a18a030c1815838\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({ weatherData: json });\n    });\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n\n    if (!weatherData) return <div>Loading...</div>;\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n\n    return (\n      <div>\n        <h1>\n          {weather.main} in {weatherData.name}\n          <img src={iconUrl} alt={weatherData.description} />\n        </h1>\n        <p>Current: {weatherData.main.temp}°</p>\n        <p>High: {weatherData.main.temp_max}°</p>\n        <p>Low: {weatherData.main.temp_min}°</p>\n        <p>Wind Speed: {weatherData.wind.speed} mi/hr</p>\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n\n  constructor() {\n   super();\n   this.state = {\n     activePlace: 0,\n   };\n }\n\n  render() {\n    const activePlace = this.state.activePlace;\n\n    return (\n      <div className=\"weather-body\">\n        {PLACES.map((place, index) => (\n          <button\n            className=\"city-btn\"\n            key={index}\n            onClick={() => {\n              this.setState({ activePlace: index });\n            }}\n          >\n            {place.name}\n          </button>\n        ))}\n        <DadataSuggestions\n          className=\"dadata-body\"\n          token={ dadataToken }\n          onSelect={ (suggestion) => console.log(suggestion) }\n        />\n        <WeatherDisplay\n          key={activePlace}\n          zip={PLACES[activePlace].zip}\n           />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}