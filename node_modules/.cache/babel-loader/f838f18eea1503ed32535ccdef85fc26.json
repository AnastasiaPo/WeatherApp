{"ast":null,"code":"var _jsxFileName = \"/Users/a.ponkrashenkova/Documents/GitHub/WeatherApp/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport DadataSuggestions from 'react-dadata-suggestions';\nimport \"react-dadata-suggestions/dist/styles.css\";\nconst dadataToken = '9357f46cef73bd355912567b08e7ecd06f531745'; // const PLACES = [\n//   { name: \"Москва\", zip: \"105005\" },\n//   { name: \"Санкт-Петербург\", zip: \"187015\" },\n//   { name: \"Сочи\", zip: \"354000\" },\n//   { name: \"Пятигорск\", zip: \"357361\" }\n// ]\n\nconst suggestion_city = this.state.suggestion;\n\nclass WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n\n  componentDidMount() {\n    const geoname_id = this.state.suggestion;\n    const URL = \"api.openweathermap.org/data/2.5/weather?id=\" + geoname_id + \"&appid=2fe9657dc864de269a18a030c1815838\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({\n        weatherData: json\n      });\n    });\n    console.log('вот тут должен быть объект с подсказками ' + geoname_id);\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 30\n      }\n    }, \"Loading...\");\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, weather.main, \" in \", weatherData.name, /*#__PURE__*/React.createElement(\"img\", {\n      src: iconUrl,\n      alt: weatherData.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Current: \", weatherData.main.temp, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"High: \", weatherData.main.temp_max, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"Low: \", weatherData.main.temp_min, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Wind Speed: \", weatherData.wind.speed, \" mi/hr\"));\n  }\n\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activePlace: 0\n    };\n  }\n\n  render() {\n    const activePlace = this.state.activePlace;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DadataSuggestions, {\n      className: \"dadata-body\",\n      token: dadataToken,\n      onSelect: suggestion => console.log(suggestion.data.geoname_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WeatherDisplay, {\n      key: activePlace,\n      zip: suggestion_city[activePlace],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a.ponkrashenkova/Documents/GitHub/WeatherApp/src/App.js"],"names":["React","Component","DadataSuggestions","dadataToken","suggestion_city","state","suggestion","WeatherDisplay","constructor","weatherData","componentDidMount","geoname_id","URL","fetch","then","res","json","setState","console","log","render","weather","iconUrl","icon","main","name","description","temp","temp_max","temp_min","wind","speed","App","activePlace","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport DadataSuggestions from 'react-dadata-suggestions';\nimport \"react-dadata-suggestions/dist/styles.css\";\n\nconst dadataToken = '9357f46cef73bd355912567b08e7ecd06f531745';\n\n// const PLACES = [\n//   { name: \"Москва\", zip: \"105005\" },\n//   { name: \"Санкт-Петербург\", zip: \"187015\" },\n//   { name: \"Сочи\", zip: \"354000\" },\n//   { name: \"Пятигорск\", zip: \"357361\" }\n// ]\n\nconst suggestion_city = this.state.suggestion\n\nclass WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n  componentDidMount() {\n    const geoname_id = this.state.suggestion;\n    const URL = \"api.openweathermap.org/data/2.5/weather?id=\" + geoname_id + \"&appid=2fe9657dc864de269a18a030c1815838\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({ weatherData: json });\n    });\n    console.log('вот тут должен быть объект с подсказками ' + geoname_id)\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n\n    if (!weatherData) return <div>Loading...</div>;\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n\n    return (\n      <div>\n        <h1>\n          {weather.main} in {weatherData.name}\n          <img src={iconUrl} alt={weatherData.description} />\n        </h1>\n        <p>Current: {weatherData.main.temp}°</p>\n        <p>High: {weatherData.main.temp_max}°</p>\n        <p>Low: {weatherData.main.temp_min}°</p>\n        <p>Wind Speed: {weatherData.wind.speed} mi/hr</p>\n      </div>\n    );\n  }\n}\n\n\nclass App extends Component {\n\n  constructor() {\n   super();\n   this.state = {\n     activePlace: 0,\n   };\n }\n\n  render() {\n\n    const activePlace = this.state.activePlace;\n\n    return (\n      <div className=\"weather-body\">\n        <DadataSuggestions\n          className=\"dadata-body\"\n          token={ dadataToken }\n          onSelect={ (suggestion) => console.log(suggestion.data.geoname_id) }\n        />\n        <WeatherDisplay\n          key={activePlace}\n          zip={suggestion_city[activePlace]}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}