{"ast":null,"code":"var _jsxFileName = \"/Users/a.ponkrashenkova/Desktop/weather/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\"; // import { AddressSuggestions } from 'react-dadata';\n\nimport 'react-dadata/dist/react-dadata.css'; // const [value, setValue] = useState();\n\nconst PLACES = [{\n  name: \"Москва\",\n  zip: \"105005\"\n}, {\n  name: \"Санкт-Петербург\",\n  zip: \"187015\"\n}, {\n  name: \"Santa Cruz\",\n  zip: \"95062\"\n}, {\n  name: \"Honolulu\",\n  zip: \"96803\"\n}]; // <AddressSuggestions token=\"c082b2b71d8e1ccaecd64b666ca6bab4bf2dae32\" value={value} onChange={setValue} />\n\nclass WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n\n  componentDidMount() {\n    const zip = this.props.zip;\n    const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" + zip + \"&appid=b1b35bba8b434a28a0be2a3e1071ae5b&units=imperial\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({\n        weatherData: json\n      });\n    });\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 30\n      }\n    }, \"Loading\");\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, weather.main, \" in \", weatherData.name, /*#__PURE__*/React.createElement(\"img\", {\n      src: iconUrl,\n      alt: weatherData.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Current: \", weatherData.main.temp, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"High: \", weatherData.main.temp_max, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Low: \", weatherData.main.temp_min, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Wind Speed: \", weatherData.wind.speed, \" mi/hr\"));\n  }\n\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activePlace: 0\n    };\n  }\n\n  render() {\n    const activePlace = this.state.activePlace;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, PLACES.map((place, index) => /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      onClick: () => {\n        this.setState({\n          activePlace: index\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, place.name)), /*#__PURE__*/React.createElement(WeatherDisplay, {\n      key: activePlace,\n      zip: PLACES[activePlace].zip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a.ponkrashenkova/Desktop/weather/src/App.js"],"names":["React","Component","PLACES","name","zip","WeatherDisplay","constructor","state","weatherData","componentDidMount","props","URL","fetch","then","res","json","setState","render","weather","iconUrl","icon","main","description","temp","temp_max","temp_min","wind","speed","App","activePlace","map","place","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n// import { AddressSuggestions } from 'react-dadata';\nimport 'react-dadata/dist/react-dadata.css';\n\n// const [value, setValue] = useState();\n\nconst PLACES = [\n  { name: \"Москва\", zip: \"105005\" },\n  { name: \"Санкт-Петербург\", zip: \"187015\" },\n  { name: \"Santa Cruz\", zip: \"95062\" },\n  { name: \"Honolulu\", zip: \"96803\" }\n]\n\n\n// <AddressSuggestions token=\"c082b2b71d8e1ccaecd64b666ca6bab4bf2dae32\" value={value} onChange={setValue} />\n\nclass WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n  componentDidMount() {\n    const zip = this.props.zip;\n    const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" +\n      zip +\n      \"&appid=b1b35bba8b434a28a0be2a3e1071ae5b&units=imperial\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({ weatherData: json });\n    });\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return <div>Loading</div>;\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n\n    return (\n      <div>\n        <h1>\n          {weather.main} in {weatherData.name}\n          <img src={iconUrl} alt={weatherData.description} />\n        </h1>\n        <p>Current: {weatherData.main.temp}°</p>\n        <p>High: {weatherData.main.temp_max}°</p>\n        <p>Low: {weatherData.main.temp_min}°</p>\n        <p>Wind Speed: {weatherData.wind.speed} mi/hr</p>\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n\n  constructor() {\n   super();\n   this.state = {\n     activePlace: 0,\n   };\n }\n\n  render() {\n    const activePlace = this.state.activePlace;\n\n    return (\n      <div className=\"App\">\n        {PLACES.map((place, index) => (\n          <button\n            key={index}\n            onClick={() => {\n              this.setState({ activePlace: index });\n            }}\n          >\n            {place.name}\n          </button>\n        ))}\n        <WeatherDisplay\n          key={activePlace}\n          zip={PLACES[activePlace].zip}\n           />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}