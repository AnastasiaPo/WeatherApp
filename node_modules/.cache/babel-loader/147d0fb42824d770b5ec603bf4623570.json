{"ast":null,"code":"var _jsxFileName = \"/Users/a.ponkrashenkova/Documents/GitHub/WeatherApp/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport DadataSuggestions from 'react-dadata-suggestions';\nimport \"react-dadata-suggestions/dist/styles.css\";\nconst dadataToken = '9357f46cef73bd355912567b08e7ecd06f531745'; // const PLACES = [\n//   { name: \"Москва\", zip: \"105005\" },\n//   { name: \"Санкт-Петербург\", zip: \"187015\" },\n//   { name: \"Сочи\", zip: \"354000\" },\n//   { name: \"Пятигорск\", zip: \"357361\" }\n// ]\n\nconst cityId = class WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n\n  componentDidMount() {\n    const geoname = this.props.cityId;\n    const URL = \"api.openweathermap.org/data/2.5/weather?id=\" + geoname + \"&appid=2fe9657dc864de269a18a030c1815838\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({\n        weatherData: json\n      });\n    });\n    console.log('вот тут должен быть объект с подсказками ' + geoname);\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 30\n      }\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");\n    const weather = weatherData.weather;\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DadataSuggestions, {\n      className: \"dadata-body\",\n      token: dadataToken,\n      onSelect: suggestion => console.log(suggestion.data.geoname_id),\n      dataSuggestions: this.dataSuggestions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, weather.main, \" in \", weatherData.name, /*#__PURE__*/React.createElement(\"img\", {\n      src: iconUrl,\n      alt: weatherData.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Current: \", weatherData.main.temp, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"High: \", weatherData.main.temp_max, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Low: \", weatherData.main.temp_min, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"Wind Speed: \", weatherData.wind.speed, \" mi/hr\"));\n  }\n\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      suggestion: []\n    };\n\n    this.dataSuggestions = suggestion => {\n      this.setState(suggestion);\n      console.log('вот че' + this.state.suggestion);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(WeatherDisplay, {\n      cityId: this.state.suggestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a.ponkrashenkova/Documents/GitHub/WeatherApp/src/App.js"],"names":["React","Component","DadataSuggestions","dadataToken","cityId","WeatherDisplay","constructor","state","weatherData","componentDidMount","geoname","props","URL","fetch","then","res","json","setState","console","log","render","weather","iconUrl","icon","suggestion","data","geoname_id","dataSuggestions","main","name","description","temp","temp_max","temp_min","wind","speed","App"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport DadataSuggestions from 'react-dadata-suggestions';\nimport \"react-dadata-suggestions/dist/styles.css\";\n\nconst dadataToken = '9357f46cef73bd355912567b08e7ecd06f531745';\n\n// const PLACES = [\n//   { name: \"Москва\", zip: \"105005\" },\n//   { name: \"Санкт-Петербург\", zip: \"187015\" },\n//   { name: \"Сочи\", zip: \"354000\" },\n//   { name: \"Пятигорск\", zip: \"357361\" }\n// ]\n\nconst cityId =\n\nclass WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n  componentDidMount() {\n    const geoname = this.props.cityId;\n    const URL = \"api.openweathermap.org/data/2.5/weather?id=\" + geoname + \"&appid=2fe9657dc864de269a18a030c1815838\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({ weatherData: json });\n    });\n    console.log('вот тут должен быть объект с подсказками ' + geoname)\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n\n    if (!weatherData) return <div>Загрузка...</div>;\n    const weather = weatherData.weather;\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n\n    return (\n      <div>\n        <DadataSuggestions\n          className=\"dadata-body\"\n          token={ dadataToken }\n          onSelect={ (suggestion) => console.log(suggestion.data.geoname_id) }\n          dataSuggestions={this.dataSuggestions}\n        />\n        <h1>\n          {weather.main} in {weatherData.name}\n          <img src={iconUrl} alt={weatherData.description} />\n        </h1>\n        <p>Current: {weatherData.main.temp}°</p>\n        <p>High: {weatherData.main.temp_max}°</p>\n        <p>Low: {weatherData.main.temp_min}°</p>\n        <p>Wind Speed: {weatherData.wind.speed} mi/hr</p>\n      </div>\n    );\n  }\n}\n\n\nclass App extends Component {\n\nstate = {\n  suggestion: []\n};\n\ndataSuggestions = (suggestion) => {\n   this.setState( suggestion )\n   console.log('вот че' + this.state.suggestion);\n}\n\n  render() {\n    return (\n      <div className=\"weather-body\">\n        <WeatherDisplay\n          cityId={this.state.suggestion}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}